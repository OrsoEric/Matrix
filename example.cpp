/****************************************************************
**	OrangeBot Project
*****************************************************************
**        /
**       /
**      /
** ______ \
**         \
**          \
*****************************************************************
**	Project
*****************************************************************
**  Brief
****************************************************************/

/****************************************************************
**	DESCRIPTION
****************************************************************
**
****************************************************************/

/****************************************************************
**	HISTORY VERSION
****************************************************************
**
****************************************************************/

/****************************************************************
**	KNOWN BUGS
****************************************************************
**
****************************************************************/

/****************************************************************
**	TODO
****************************************************************
**
****************************************************************/

/****************************************************************
**	INCLUDES
****************************************************************/

//Standard C Libraries
//#include <cstdio>
//#include <cstdlib>
//Standard C++ libraries
#include <iostream>
#include <vector>

//Include user log trace
#include "debug.h"
#include "matrix.h"


/****************************************************************
**	NAMESPACES
****************************************************************/

//Never use a whole namespace. Use only what you need from it.
using std::cout;
using std::endl;

/****************************************************************
**	DEFINES
****************************************************************/

/****************************************************************
**	MACROS
****************************************************************/

/****************************************************************
**	PROTOTYPES
****************************************************************/

//Test bench for Matrix.h
extern bool test_matrix( void );

/****************************************************************
**	GLOBAL VARIABILES
****************************************************************/

//User::Dummy my_class;

/****************************************************************
**	FUNCTIONS
****************************************************************/

/****************************************************************
**	MAIN
****************************************************************
**	INPUT:
**	OUTPUT:
**	RETURN:
**	DESCRIPTION:
****************************************************************/

int main()
{
	///----------------------------------------------------------------
	///	STATIC VARIABILE
	///----------------------------------------------------------------

	///----------------------------------------------------------------
	///	LOCAL VARIABILE
	///----------------------------------------------------------------

	///----------------------------------------------------------------
	///	CHECK AND INITIALIZATIONS
	///----------------------------------------------------------------

	//Start Debugging. Show function nesting level 0 and above
	DSTART( 0 );
	//Trace Enter main
	DENTER();

	///----------------------------------------------------------------
	///	BODY
	///----------------------------------------------------------------

	printf("OrangeBot Projects\n");
	//print in the 'debug.log' file. works just like a fully featured printf
	DPRINT("OrangeBot Projects\n");

	//Test Matrix.h
	test_matrix();

	///----------------------------------------------------------------
	///	FINALIZATIONS
	///----------------------------------------------------------------

	//Trace Return from main
	DRETURN();
	//Stop Debugging
	DSTOP();

    return 0;
}	//end function: main

/****************************************************************************
**	test_matrix | void
*****************************************************************************
**	PARAMETER:
**	RETURN:
**	DESCRIPTION:
**	Test bench for Matrix.h
****************************************************************************/

bool test_matrix( void )
{
	///--------------------------------------------------------------------------
	///	STATIC VARIABILE
	///--------------------------------------------------------------------------

	///--------------------------------------------------------------------------
	///	LOCAL VARIABILE
	///--------------------------------------------------------------------------

	//My matrix
	User::Matrix<double> my_mat;

	///--------------------------------------------------------------------------
	///	CHECK
	///--------------------------------------------------------------------------

	///--------------------------------------------------------------------------
	///	INITIALIZATIONS
	///--------------------------------------------------------------------------

	//Trace Enter with arguments
	DENTER_ARG("in: %d\n", 0);

	///--------------------------------------------------------------------------
	///	BODY
	///--------------------------------------------------------------------------

	//Create the matrix
	my_mat = User::Matrix<double>(3, 3);

	my_mat.show();
	my_mat = User::Matrix<double>(3, 4, 1.0f);
	my_mat.show();

	User::Matrix<double> another_mat = User::Matrix<double>(4, 1, 1.0f);
	another_mat.show();

	my_mat.is_invalid();
	my_mat.is_invalid( 2, 2 );
	//Use the matrix
	my_mat.at( 2 ,2 ) = 0.0f;

	cout << my_mat.at( 2 ,2 ) << "\n";
	my_mat.show();

	my_mat = my_mat *another_mat;
	my_mat.show();

	///--------------------------------------------------------------------------
	///	FINALIZATIONS
	///--------------------------------------------------------------------------

	///--------------------------------------------------------------------------
	///	RETURN
	///--------------------------------------------------------------------------

	//Trace Return vith return value
	DRETURN_ARG("out: %d\n", 0);

	return false; //OK
}	//end function: test_matrix | void
